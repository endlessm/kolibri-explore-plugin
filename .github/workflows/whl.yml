name: Build whl artifact

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  whl:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Set up Node 10.17.0
      uses: actions/setup-node@v2
      with:
        node-version: '10.17.0'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        npm install -g yarn@1.22.10
        yarn global add @vue/cli

        pip install -r requirements.txt
        yarn install

    - name: Checkout custom channel
      uses: actions/checkout@v2
      with:
        repository: endlessm/kolibri-channel-custom-web-app
        path: kolibri-channel-custom-web-app

    - name: Build kolibri-channel-custom-web-app
      run: |
        cd kolibri-channel-custom-web-app
        yarn install
        ./scripts/create_mock_nodes.py > template-ui/src/nodes.json
        yarn build
        yarn deploy ../kolibri_explore_plugin/apps
        cd ..

    - name: Build whl
      run: |
        # Set the version number to next to use for dev
        current=$(python -c "import kolibri_explore_plugin; print(kolibri_explore_plugin.__version__)")
        number=$(date +%s)
        bump2version --no-tag --no-commit --allow-dirty patch
        next=$(python -c "import kolibri_explore_plugin; print(kolibri_explore_plugin.__version__)")
        version="$next.dev$number"
        echo "version=$version" >> $GITHUB_ENV
        echo "__version__ = \"$version\""> kolibri_explore_plugin/__init__.py
        make dist

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: "kolibri_explore_plugin-${{ env.version }}-py2.py3-none-any.whl"
        path: dist/*.whl
        retention-days: 5

    - name: Publish dev distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
