@import "~@fontsource/lato/index.css";
@import "~@fontsource/poppins/index.css";

// Bootstrap theme variables:
$primary: #F15A22;
$secondary: #14BF96;
$gray-300: #EFF0F3;
$gray-400: #D8DDE1;
$gray-500: #CED4DA;
$gray-600: #6C757D;
$gray-700: #12272A;
$gray-800: #091415;

$light: $gray-300;
$dark: $gray-600;

$orange: #FF9741;
$yellow: #F5BD2C;
$teal: #33EFB8;
$cyan: #35E9EF;
$lavender: #CEA2EC;
$pink: #F97DA1;

// This is not a $gray-* by design:
$lightbox-background: #0F0F0F;

$modal-content-color: $light;
$modal-content-bg: $lightbox-background;
$modal-content-border-width: 0;
$modal-backdrop-opacity: 0.8;

$theme-colors: (
  "bundle": $lavender,
  "audio": $pink,
  "document": $teal,
  "exercise": $cyan,
  "html5": $yellow,
  "video": $orange
);

$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
) !default;

$btn-font-weight: 600;
$headings-font-weight: 600;
$display1-weight: 700;
$display2-weight: 700;
$display3-weight: 700;
$display4-weight: 700;

$border-radius-lg: 1rem;
$body-bg: $gray-300;
$font-family-sans-serif: "Lato", sans-serif;
$headings-font-family: "Poppins", sans-serif;

$btn-font-family: $headings-font-family;
$btn-font-size: 0.875rem;
$btn-padding-x: 1rem;
$btn-padding-y: 0.5rem;
$btn-font-size-sm: 0.75rem;
$btn-padding-x-sm: 0.75rem;
$btn-padding-y-sm: 0.375rem;
$breadcrumb-font-size: 0.875rem;
$breadcrumb-divider: quote("<");
$breadcrumb-divider-color: rgba($gray-700, 0.5);
$breadcrumb-active-color: rgba($gray-700, 0.5);
$breadcrumb-bg: $secondary !default;

// Template variables:
$header-logo-width: 128;
$header-height: 496px; // Forms an area with the XXL breakpoint of aspect ratio: 2.82
$hover-lightness: -25%;
$background-alpha: -8%;

:export {
  headerLogoWidth: $header-logo-width;
}

@function card-body-height($title-lines) {
  $type-line-height: $font-size-base * $line-height-base;
  $title-line-height: $title-lines * ($h5-font-size * $headings-line-height);
  $subtitle-line-height: $font-size-base * $line-height-base;
  $tags-line-height: $font-size-base * $line-height-base;

  $margins: map-get($spacers, 1) * 4;

  @return ($type-line-height + $title-line-height +
           $subtitle-line-height + $tags-line-height +
           $margins);
}

$carousel-indicator-width:           24px !default;
$carousel-indicator-height:          8px !default;
$carousel-indicator-hit-area-height: 10px !default;
$carousel-indicator-spacer:          3px !default;
$carousel-indicator-transition:      all .6s ease !default;

$carousel-image-width:    50%;
$carousel-image-lg-width: 400px;

@import "../../template-ui/src/overrides/styles.scss";

@import 'bootstrap/scss/bootstrap';
@import 'bootstrap-vue/src/index';

@import 'mixins';

// Change button dark outline variant:
.btn-outline-dark {
  $value: theme-color("dark");
  @include eos-button-outline-variant($value, $color-hover: $value, $border-color: $gray-500, $active-background: transparent, $active-border: $primary);
}
// Change buttons variant:
@each $color, $value in $theme-colors {
  .btn-#{$color}-primary {
    $hover-value: scale-color($value, $lightness: $hover-lightness);
    @include button-variant(
      $background: $value,
      $border: $value,
      $hover-background: $hover-value,
      $active-background: $hover-value,
      $active-border: $hover-value);
  }
  .btn-#{$color}-light {
    @include button-variant(
      $background: $light,
      $border: $light,
      $hover-border: $value);
  }
}
.btn-light {
  color: $dark;
}

.close.text-light {
  text-shadow: none;
}

// Change header color:
$header-color: scale-color($secondary, $lightness: 50%);

// Change breadcrumbs:
.breadcrumb {
  font-family: $headings-font-family;
  font-weight: $headings-font-weight;
}
.badge {
  font-family: $headings-font-family;
  color: $text-muted;
}

.breadcrumb-item a {
  color: $gray-700;
}

// Calculate navbar height:
$navbar-height: $navbar-brand-height +
                $navbar-brand-padding-y * 2 +
                $navbar-padding-y * 2;

:export {
  xs: map-get($grid-breakpoints, "xs");
  sm: map-get($grid-breakpoints, "sm");
  md: map-get($grid-breakpoints, "md");
  lg: map-get($grid-breakpoints, "lg");
  xl: map-get($grid-breakpoints, "xl");
  xxl: map-get($grid-breakpoints, "xxl");
}

.description {
  white-space: pre-wrap;
}
