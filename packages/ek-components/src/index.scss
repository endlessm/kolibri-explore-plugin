@use "@fontsource/lato/scss/mixins" as Lato;
@use "@fontsource/poppins/scss/mixins" as Poppins;

@import 'styles';

@import 'bootstrap/scss/bootstrap';
@import 'bootstrap-vue/src/index';

@include Lato.faces(
  $weights: (
    400,
    700,
  ),
  $formats: woff2
);

@include Poppins.faces(
  $weights: (
    400,
    600,
    700,
  ),
  $formats: woff2
);

// Override containers mixin:
@mixin make-container($gutter: $grid-gutter-width) {
  width: 100%;
  padding-right: $gutter + $circled-button-size;
  padding-left: $gutter + $circled-button-size;
  margin-right: auto;
  margin-left: auto;
}

@if $enable-grid-classes {
  // Single container class with breakpoint max-widths
  .container,
  // 100% wide container at all breakpoints
  .container-fluid {
    @include make-container();
  }
  .no-container-padding {
    padding-right: 0;
    padding-left: 0;
  }
}

// Change button dark outline variant:
.btn-outline-dark {
  $value: theme-color("dark");
  @include ek-button-outline-variant($value, $color-hover: $value, $border-color: $gray-500, $active-background: transparent, $active-border: $primary);
  &:focus {
    box-shadow: $btn-focus-box-shadow;
  }
}

// Change buttons variant:
@each $color, $value in $theme-colors {
  .btn-#{$color} {
    $hover-value: scale-color($value, $lightness: $hover-lightness);
    @include button-variant(
      $background: $value,
      $border: $value,
      $hover-background: $hover-value,
      $active-background: $hover-value,
      $active-border: $hover-value);
    &:focus {
      box-shadow: $btn-focus-box-shadow;
    }
  }

  .btn-#{$color}-primary {
    $hover-value: scale-color($value, $lightness: $hover-primary-lightness);
    @include button-variant(
      $background: $value,
      $border: $value,
      $hover-background: $hover-value,
      $active-background: $hover-value,
      $active-border: $hover-value);
    border: 0;
    &:focus {
      box-shadow: $btn-focus-box-shadow;
    }
  }

  .btn-#{$color}-light {
    @include button-variant(
      $background: $light,
      $border: $light,
      $hover-border: $value);
    border: 0;
    &:focus {
      box-shadow: $btn-focus-box-shadow;
    }
  }

  .btn-#{$color}-outline-dark {
    $value: theme-color("dark");
    @include ek-button-outline-variant($value, $color-hover: $value, $border-color: $gray-500, $active-background: transparent, $active-border: $primary);
  }
}

.btn-light {
  color: $dark;
}

.close.text-light {
  text-shadow: none;
}

.btn-outline-primary:focus, .btn-outline-primary.focus {
  box-shadow: $btn-focus-box-shadow;
}

// Change breadcrumbs:
.breadcrumb {
  font-family: $headings-font-family;
  font-weight: $headings-font-weight;
}
.breadcrumb-item,
.breadcrumb-item.text-light a {
  color: $gray-500;
};
.breadcrumb-item.text-light a {
  text-decoration: underline;
};

.badge {
  font-family: $headings-font-family;
  color: $text-muted;
}

.breadcrumb-item a {
  color: $gray-700;
}

.description {
  white-space: pre-wrap;
}

a {
  font-weight: $font-weight-bold;
}
